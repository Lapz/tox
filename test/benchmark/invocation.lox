// This benchmark stresses just method invocation.

class Foo {
  fun method0() {}
  fun method1() {}
  fun method2() {}
  fun method3() {}
  fun method4() {}
  fun method5() {}
  fun method6() {}
  fun method7() {}
  fun method8() {}
  fun method9() {}
  fun method10() {}
  fun method11() {}
  fun method12() {}
  fun method13() {}
  fun method14() {}
  fun method15() {}
  fun method16() {}
  fun method17() {}
  fun method18() {}
  fun method19() {}
  fun method20() {}
  fun method21() {}
  fun method22() {}
  fun method23() {}
  fun method24() {}
  fun method25() {}
  fun method26() {}
  fun method27() {}
  fun method28() {}
  fun method29() {}
}

var foo = Foo{};
var start = clock();
var i = 0;
while (i < 500000) {
  foo.method0();
  foo.method1();
  foo.method2();
  foo.method3();
  foo.method4();
  foo.method5();
  foo.method6();
  foo.method7();
  foo.method8();
  foo.method9();
  foo.method10();
  foo.method11();
  foo.method12();
  foo.method13();
  foo.method14();
  foo.method15();
  foo.method16();
  foo.method17();
  foo.method18();
  foo.method19();
  foo.method20();
  foo.method21();
  foo.method22();
  foo.method23();
  foo.method24();
  foo.method25();
  foo.method26();
  foo.method27();
  foo.method28();
  foo.method29();
  i = i + 1;
}

print(clock() - start);
